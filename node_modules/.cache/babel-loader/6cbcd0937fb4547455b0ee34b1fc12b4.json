{"ast":null,"code":"var _jsxFileName = \"E:\\\\Front-End\\\\va-webs\\\\src\\\\components\\\\chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Chat, addResponseMessage } from 'react-chat-popup';\nimport { Modal, Col, Row } from 'react-bootstrap';\nimport andre from '../components/assets/img/andre.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chats = props => {\n  _s();\n\n  const [modalShow, setModalShow] = useState(false);\n  const {\n    name\n  } = props;\n  const date = new Date();\n  let min = date.getMinutes();\n  let hour = date.getHours();\n\n  if (min < 10) {\n    min = '0' + min;\n  }\n\n  if (hour < 10) {\n    hour = '0' + hour;\n  }\n\n  const waktu = hour + ':' + min;\n  const personChat = [{\n    'name': 'Andre',\n    'chat': 'Hi! How are you?',\n    'time': '10:00'\n  }, {\n    'name': 'Chandra',\n    'chat': 'Have you read the lattest news?',\n    'time': '01:10'\n  }, {\n    'name': 'Enteng',\n    'chat': 'Please send me the Document',\n    'time': '22:19'\n  }, {\n    'name': 'Richard',\n    'chat': 'Hello, Good Day Sir! How are you?',\n    'time': '15:45'\n  }, {\n    'name': 'deviana',\n    'chat': 'Helloo',\n    'time': '16:45'\n  }];\n  const findChat = personChat.find(person => person.name === name);\n  const [chat, isChat] = useState({\n    chatContent: ''\n  }); // console.log(findChat.name, 'cari nama')\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    isChat({ ...chat,\n      [name]: value\n    });\n  };\n\n  const [array, setArray] = useState([]);\n  const {\n    chatContent\n  } = chat;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setArray([...array, {\n      chatContent,\n      waktu\n    }]); // setArray([...array, {chatContent, waktu}])\n\n    isChat({\n      chatContent: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.show,\n    onHide: e => setArray([]),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Talk to \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatContent\",\n        children: [findChat && findChat.name === name && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBubble2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: findChat.chat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chatTime\",\n            children: findChat.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), array.length > 0 && array.map((array, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBubble\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"chatText\",\n                children: array.chatContent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"chatTime\",\n                children: array.waktu\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chatForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: chatContent,\n          name: \"chatContent\",\n          onChange: handleChange,\n          type: \"text\",\n          onKeyPress: e => {\n            if (e.key === 'Enter') e.preventDefault();\n          },\n          placeholder: \"type something...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleSubmit,\n          className: \"sendButton\",\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chats, \"iXDg9XmDfNzyA4hN1Q0MbLhnKaw=\");\n\n_c = Chats;\nexport default Chats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"sources":["E:/Front-End/va-webs/src/components/chat.js"],"names":["React","useState","useEffect","Chat","addResponseMessage","Modal","Col","Row","andre","Chats","props","modalShow","setModalShow","name","date","Date","min","getMinutes","hour","getHours","waktu","personChat","findChat","find","person","chat","isChat","chatContent","handleChange","e","value","target","array","setArray","handleSubmit","preventDefault","show","time","length","map","idx","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,kBAAf,QAAyC,kBAAzC;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,QAAgC,iBAAhC;AACA,OAAOC,KAAP,MAAkB,oCAAlB;;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAACY,IAAAA;AAAD,MAASH,KAAf;AACA,QAAMI,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,MAAIC,GAAG,GAAGF,IAAI,CAACG,UAAL,EAAV;AACA,MAAIC,IAAI,GAAGJ,IAAI,CAACK,QAAL,EAAX;;AACA,MAAIH,GAAG,GAAG,EAAV,EAAa;AACTA,IAAAA,GAAG,GAAG,MAAIA,GAAV;AACH;;AACD,MAAIE,IAAI,GAAG,EAAX,EAAc;AACVA,IAAAA,IAAI,GAAG,MAAIA,IAAX;AACH;;AACD,QAAME,KAAK,GAAGF,IAAI,GAAC,GAAL,GAASF,GAAvB;AACA,QAAMK,UAAU,GAAG,CACf;AAAC,YAAQ,OAAT;AAAkB,YAAQ,kBAA1B;AAA8C,YAAQ;AAAtD,GADe,EAEf;AAAC,YAAQ,SAAT;AAAoB,YAAQ,iCAA5B;AAA+D,YAAQ;AAAvE,GAFe,EAGf;AAAC,YAAQ,QAAT;AAAmB,YAAQ,6BAA3B;AAA0D,YAAQ;AAAlE,GAHe,EAIf;AAAC,YAAQ,SAAT;AAAoB,YAAQ,mCAA5B;AAAiE,YAAQ;AAAzE,GAJe,EAKf;AAAC,YAAQ,SAAT;AAAoB,YAAQ,QAA5B;AAAsC,YAAQ;AAA9C,GALe,CAAnB;AAMA,QAAMC,QAAQ,GAAGD,UAAU,CAACE,IAAX,CAAgBC,MAAM,IAAIA,MAAM,CAACX,IAAP,KAAgBA,IAA1C,CAAjB;AACA,QAAM,CAACY,IAAD,EAAOC,MAAP,IAAiBzB,QAAQ,CAAE;AAC7B0B,IAAAA,WAAW,EAAG;AADe,GAAF,CAA/B,CApBqB,CAuBrB;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAM;AAAEhB,MAAAA,IAAF;AAAQiB,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAL,IAAAA,MAAM,CAAC,EACH,GAAGD,IADA;AAEH,OAACZ,IAAD,GAAQiB;AAFL,KAAD,CAAN;AAIH,GAND;;AAOA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBhC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAE0B,IAAAA;AAAF,MAAkBF,IAAxB;;AACA,QAAMS,YAAY,GAAIL,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACM,cAAF;AACAF,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEL,MAAAA,WAAF;AAAeP,MAAAA;AAAf,KAAX,CAAD,CAAR,CAFwB,CAGxB;;AACAM,IAAAA,MAAM,CAAC;AACHC,MAAAA,WAAW,EAAC;AADT,KAAD,CAAN;AAGH,GAPD;;AAQA,sBACI,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEjB,KAAK,CAAC0B,IAAnB;AAAyB,IAAA,MAAM,EAAEP,CAAC,IAAII,QAAQ,CAAC,EAAD,CAA9C;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAA,+BAAapB,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,mBACMS,QAAQ,IAAKA,QAAQ,CAACT,IAAT,KAAkBA,IAA/B,iBACF;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAA,sBAAIS,QAAQ,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,SAAS,EAAC,UAAb;AAAA,sBAAyBH,QAAQ,CAACe;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAMKL,KAAK,CAACM,MAAN,GAAe,CAAf,IAAoBN,KAAK,CAACO,GAAN,CAAU,CAACP,KAAD,EAAQQ,GAAR,KAAgB;AAC/C,8BACA;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACI;AAAG,gBAAA,SAAS,EAAC,UAAb;AAAA,0BAAyBR,KAAK,CAACL;AAA/B;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAG,gBAAA,SAAS,EAAC,UAAb;AAAA,0BAAyBK,KAAK,CAACZ;AAA/B;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAAUoB,GAAV;AAAA;AAAA;AAAA;AAAA,kBADA;AAQH,SATwB,CANzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAmBI;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA,gCACI;AAAO,UAAA,KAAK,EAAEb,WAAd;AAA2B,UAAA,IAAI,EAAC,aAAhC;AAA8C,UAAA,QAAQ,EAAEC,YAAxD;AAAsE,UAAA,IAAI,EAAC,MAA3E;AAAkF,UAAA,UAAU,EAAEC,CAAC,IAAI;AAC/F,gBAAIA,CAAC,CAACY,GAAF,KAAU,OAAd,EACAZ,CAAC,CAACM,cAAF;AACH,WAHD;AAGG,UAAA,WAAW,EAAC;AAHf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAED,YAA/B;AAA6C,UAAA,SAAS,EAAC,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAxED;;GAAMzB,K;;KAAAA,K;AA0EN,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react' \r\nimport { Chat, addResponseMessage } from 'react-chat-popup';\r\nimport { Modal, Col, Row } from 'react-bootstrap';\r\nimport andre from '../components/assets/img/andre.png'\r\n\r\n\r\nconst Chats = (props) => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const {name} = props\r\n    const date = new Date();\r\n    let min = date.getMinutes();\r\n    let hour = date.getHours();\r\n    if (min < 10){\r\n        min = '0'+min\r\n    }\r\n    if (hour < 10){\r\n        hour = '0'+hour\r\n    }\r\n    const waktu = hour+':'+min\r\n    const personChat = [\r\n        {'name': 'Andre', 'chat': 'Hi! How are you?', 'time': '10:00' },\r\n        {'name': 'Chandra', 'chat': 'Have you read the lattest news?', 'time': '01:10'}, \r\n        {'name': 'Enteng', 'chat': 'Please send me the Document', 'time': '22:19'}, \r\n        {'name': 'Richard', 'chat': 'Hello, Good Day Sir! How are you?', 'time': '15:45'},\r\n        {'name': 'deviana', 'chat': 'Helloo', 'time': '16:45'}]\r\n    const findChat = personChat.find(person => person.name === name)\r\n    const [chat, isChat] = useState ({\r\n        chatContent : ''\r\n    })\r\n    // console.log(findChat.name, 'cari nama')\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        isChat({\r\n            ...chat,\r\n            [name]: value,\r\n        });\r\n    };\r\n    const [array, setArray] = useState([])\r\n    const { chatContent } = chat;\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setArray([...array, { chatContent, waktu }])\r\n        // setArray([...array, {chatContent, waktu}])\r\n        isChat({\r\n            chatContent:''\r\n        })\r\n    }\r\n    return (\r\n        <Modal show={props.show} onHide={e => setArray([])}>\r\n            <div className='chatBox'>\r\n                <h4>Talk to {name}</h4>\r\n                <div className='chatContent'>\r\n                    { findChat && (findChat.name === name) &&\r\n                    <div className='chatBubble2'>\r\n                        <p>{findChat.chat}</p>\r\n                        <p className='chatTime'>{findChat.time}</p>\r\n                    </div>}\r\n                    {array.length > 0 && array.map((array, idx) => {\r\n                    return (\r\n                    <div key={idx}>\r\n                        <div className='chatBubble'>\r\n                            <p className='chatText'>{array.chatContent}</p>\r\n                            <p className='chatTime'>{array.waktu}</p>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                })}\r\n                </div>\r\n                <form className='chatForm'>\r\n                    <input value={chatContent} name='chatContent' onChange={handleChange} type='text' onKeyPress={e => {\r\n                        if (e.key === 'Enter') \r\n                        e.preventDefault();\r\n                    }} placeholder='type something...' />\r\n                    <button type='button' onClick={handleSubmit} className='sendButton'>send</button>\r\n                </form>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Chats\r\n"]},"metadata":{},"sourceType":"module"}